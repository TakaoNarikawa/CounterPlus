{"version":3,"sources":["Counter.js","ScoreManager.js","App.js","Result.js","serviceWorker.js","index.js"],"names":["Counter","props","state","p1","score","set","p2","leftServes","posReversed","manager","updateContentInterface","p1_","p2_","leftServes_","posReversed_","setState","a","b","scoreViews","this","initialPosReversed","map","isP1","scoreData","onPositiveSwipe","addScore","onNegativeSwipe","minusScore","serveIndicate","style","display","flexDirection","alignItems","justifyContent","Component","ScoreView","offset","onStartSwipe","e","data","y","onFinishSwipe","deltaY","windowHeight","window","innerHeight","windowWidth","innerWidth","handleResize","bind","addEventListener","WindowSize","event","axis","handle","defaultPosition","x","position","grid","scale","onStart","onDrag","handleDrag","onStop","className","width","fontSize","height","Grid","container","spacing","direction","justify","minHeight","item","xs","textAlign","marginTop","color","Math","min","userSelect","margin","marginBottom","padding","size","border","xor","Score","servReversed","p1set","p2set","Player","ScoreManager","isSetFinished","proceedNextSet","changeScore","isPlus","changeServReversed","pushHistory","updateInterface","isPosReversed","updateBarInterface","logIncludes","logIndex","isP1Winner","isDeuce","primServReversed","floor","undo","restoreFromLog","redo","newEle","log","length","push","slice","console","i","reset","result","setResults","p1score","p2score","setResult","abs","useStyles","makeStyles","theme","root","flexGrow","title","createMuiTheme","type","palette","primary","light","main","contrastText","secondary","error","App","handleClick","anchorEl","currentTarget","handleClose","classes","redoEnabled","undoEnabled","setAnchorEl","left","right","Typography","variant","src","alt","top","transform","menu","ToggleButton","value","selected","onChange","bordeRadius","SwapHorizOutlined","IconButton","aria-label","disabled","onClick","ArrowBackIos","ArrowForwardIos","Button","aria-controls","aria-haspopup","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","confirm","res","history","pathname","name","content","MuiThemeProvider","AppBar","boxShadow","Toolbar","backgroundColor","withRouter","withStyles","card","minWidth","bullet","ResultView","location","header","ResultCard","subResStr","arr","finalRes","subRes","component","Card","CardContent","gutterBottom","pos","FacebookShareButton","url","FacebookIcon","round","TwitterShareButton","via","paddingLeft","paddingRight","TwitterIcon","hostname","match","ReactDOM","render","exact","path","Result","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75dcb19a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Draggable from 'react-draggable';\nimport { Grid } from '@material-ui/core'\n\nconst xor = (a, b) => {\n    return (a || b) && !(a && b);\n}\n\nclass Counter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            p1: {\n                score: 0,\n                set: 0\n            },\n            p2: {\n                score: 0,\n                set: 0\n            },\n            leftServes: true,\n            posReversed: false\n        }\n        this.manager = this.props.manager;\n        this.manager.updateContentInterface = (p1_, p2_, leftServes_, posReversed_) => {\n            this.setState({\n                p1: {\n                    score: p1_.score,\n                    set: p1_.set\n                },\n                p2: {\n                    score: p2_.score,\n                    set: p2_.set\n                },\n                leftServes: leftServes_,\n                posReversed: posReversed_\n            })\n        }\n    }\n    render() {\n\n        var scoreViews = (!xor(this.state.posReversed, this.props.initialPosReversed) ? [true, false] : [false, true]).map((isP1) => {\n            return (\n                <ScoreView\n                    scoreData={isP1 ? this.state.p1 : this.state.p2}\n                    onPositiveSwipe={() => {\n                        this.manager.addScore(isP1);\n                    }}\n                    onNegativeSwipe={() => {\n                        this.manager.minusScore(isP1);\n                    }\n                    }\n                    serveIndicate={isP1 ? this.state.leftServes : !this.state.leftServes}\n                />\n            )\n        })\n\n        return (\n            <div style={{ display: 'flex', flexDirection: 'col', alignItems: 'center', justifyContent: 'center' }}>\n                {scoreViews}\n            </div>\n        )\n    }\n}\n\nclass ScoreView extends Component {\n    offset = 0\n\n    constructor() {\n        super();\n        this.state = {\n            windowHeight: window.innerHeight,\n            windowWidth: window.innerWidth\n        }\n        this.handleResize = this.handleResize.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n    componentWillUnmount() {\n        window.addEventListener(\"resize\", null);\n    }\n    handleResize(WindowSize, event) {\n        this.setState({ windowHeight: window.innerHeight, windowWidth: window.innerWidth })\n    }\n\n    onStartSwipe = (e, data) => {\n        this.offset = data.y\n    };\n\n    onFinishSwipe = (e, data) => {\n        let deltaY = data.y - this.offset;\n\n        if (deltaY > 100) {\n            this.props.onPositiveSwipe();\n        } else if (deltaY < -100) {\n            this.props.onNegativeSwipe();\n        }\n    };\n\n    render() {\n\n        // スワイプ量に合わせて、要素の位置を変更する.\n        let style = {\n            width: '50vw',\n            fontSize: '100',\n            height: '100vh',\n        }\n\n        return (\n            <Draggable\n                axis=\"none\"\n                handle=\".handle\"\n                defaultPosition={{ x: 0, y: 0 }}\n                position={null}\n                grid={[25, 25]}\n                scale={1}\n                onStart={this.onStartSwipe}\n                onDrag={this.handleDrag}\n                onStop={this.onFinishSwipe}>\n                <div>\n                    <div className=\"handle\" style={style}>\n\n\n                        <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh' }}\n                        >\n                            <Grid item xs={12}>\n                                <div>\n                                    <div style={{\n                                        textAlign: 'center', marginTop: -70\n                                    }}>\n                                        <h1 style={{\n                                            color: '#fff',\n                                            fontSize: Math.min(this.state.windowHeight * 0.45, this.state.windowWidth * 0.45),\n                                            userSelect: 'none', margin: 0, marginBottom: '0', padding: 0\n                                        }}>{this.props.scoreData.score}</h1>\n                                        <h2 style={{\n                                            color: '#fff',\n                                            fontSize: Math.min(this.state.windowHeight * 0.1, this.state.windowWidth * 0.2),\n                                            userSelect: 'none', margin: 0\n                                        }}>{this.props.scoreData.set}</h2>\n                                    </div>\n                                    <hr size=\"8\" style={{ border: 0, width: Math.min(this.state.windowHeight * 0.5, this.state.windowWidth * 0.45) }} color={this.props.serveIndicate ? '#ff2477' : 'transparent'} />\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                </div>\n            </Draggable>\n\n        )\n    }\n}\n\nexport default Counter\n","const xor = (a, b) => {\n    return (a || b) && !(a && b);\n}\n\nclass Score {\n    constructor(p1, p2, servReversed, posReversed) {\n        this.p1 = p1.score;\n        this.p2 = p2.score;\n        this.p1set = p1.set;\n        this.p2set = p2.set;\n        this.servReversed = servReversed;\n        this.posReversed = posReversed;\n    }\n}\n\nclass Player {\n    constructor() {\n        this.score = 0;\n        this.set = 0;\n    }\n}\n\nexport default class ScoreManager {\n    constructor() {\n        this.p1 = new Player();\n        this.p2 = new Player();\n\n        this.servReversed = false;\n        this.posReversed = false;\n\n        this.log = [new Score(this.p1, this.p2, this.servReversed, this.posReversed)];\n        this.logIndex = 0;\n    }\n\n    addScore = (isP1) => {\n        if (this.isSetFinished()) {\n            this.proceedNextSet()\n            return;\n        }\n        this.changeScore(isP1, true);\n    }\n\n    minusScore = (isP1) => {\n        if ((isP1 && this.p1.score < 1) || (!isP1 && this.p2.score < 1)) {\n            return;\n        }\n        this.changeScore(isP1, false);\n    }\n\n    changeScore = (isP1, isPlus) => {\n        if (isP1) {\n            this.p1.score += isPlus ? 1 : -1;\n        } else {\n            this.p2.score += isPlus ? 1 : -1;\n        }\n        this.changeServReversed();\n        this.pushHistory();\n        this.updateInterface();\n    }\n    updateInterface = () => {\n        this.updateContentInterface(this.p1, this.p2, this.leftServes(), this.isPosReversed());\n        this.updateBarInterface(this.logIncludes(this.logIndex + 1), this.logIncludes(this.logIndex - 1));\n    }\n\n    proceedNextSet = () => {\n        let isP1Winner = this.p1.score > this.p2.score;\n        this.p1.score = 0;\n        this.p2.score = 0;\n        if (isP1Winner) {\n            this.p1.set += 1;\n        } else {\n            this.p2.set += 1;\n        }\n\n        this.posReversed = (this.p1.set + this.p2.set) % 2 === 1\n\n        this.changeServReversed();\n        this.pushHistory();\n        this.updateInterface();\n    }\n\n    changeServReversed = () => {\n        if (this.isDeuce()) {\n            this.servReversed = xor((this.p1.score + this.p2.score) % 2 === 0, !this.primServReversed);\n        } else {\n            this.servReversed = xor(Math.floor((this.p1.score + this.p2.score) / 2) % 2 === 0, !this.primServReversed);\n        }\n    }\n\n    undo = () => {\n        if (this.logIncludes(this.logIndex - 1)) {\n            this.logIndex--;\n            this.restoreFromLog(this.logIndex);\n        }\n    }\n\n    redo = () => {\n        if (this.logIncludes(this.logIndex + 1)) {\n            this.logIndex++;\n            this.restoreFromLog(this.logIndex);\n        }\n    }\n\n    pushHistory = () => {\n        let newEle = new Score(this.p1, this.p2, this.servReversed, this.posReversed);\n        if (this.log.length === this.logIndex + 1) {\n            this.log.push(newEle);\n        } else if (this.log.length > this.logIndex + 1) {\n            // override cache\n            this.log = this.log.slice(0, this.logIndex + 1);\n            this.log.push(newEle);\n        } else {\n            console.log('unknown issue occured')\n        }\n        this.logIndex++;\n    }\n\n    restoreFromLog = (i) => {\n        let log = this.log[i];\n        this.p1.score = log.p1;\n        this.p2.score = log.p2;\n        this.p1.set = log.p1set;\n        this.p2.set = log.p2set;\n        this.servReversed = log.servReversed;\n        this.posReversed = log.posReversed;\n\n        this.updateInterface();\n    }\n\n    reset = () => {\n        this.p1 = new Player();\n        this.p2 = new Player();\n\n        this.servReversed = false;\n        this.posReversed = false;\n\n        this.log = [new Score(this.p1, this.p2, this.servReversed, this.posReversed)];\n        this.logIndex = 0;\n\n        this.updateInterface();\n    }\n\n    result = () => {\n        var setResults = []\n\n        if (this.log.length < 1) {\n            return [{\n                p1score: 0,\n                p2score: 0,\n                p1set: 0,\n                p2set: 0\n            }]\n        }\n\n        for (var i = 1; i < this.log.length; i++) {\n            let log = this.log[i]\n            if (this.isSetFinished(log.p1, log.p2)) {\n                let setResult = {\n                    p1score: log.p1,\n                    p2score: log.p2,\n                    p1set: log.p1set + log.p1 > log.p2 ? 1 : 0,\n                    p2set: log.p2set + log.p1 < log.p2 ? 1 : 0\n                }\n                setResults.push(setResult)\n            }\n        }\n\n        let log = this.log[this.log.length - 1]\n\n        if (!this.isSetFinished(log.p1, log.p2)) {\n            let setResult = {\n                p1score: log.p1,\n                p2score: log.p2,\n                p1set: log.p1set,\n                p2set: log.p2set\n            }\n            setResults.push(setResult)\n        }\n\n        return setResults;\n    }\n\n    isDeuce = () => {\n        return this.p1.score > 9 && this.p2.score > 9;\n    }\n\n    isSetFinished = (p1 = this.p1.score, p2 = this.p2.score) => {\n        return Math.abs(p1 - p2) > 1 && (p1 > 10 || p2 > 10);\n    }\n    isPosReversed = () => {\n        return xor(this.posReversed, this.primServReversed);\n    }\n    leftServes = () => {\n        return !xor(this.posReversed, this.servReversed)\n    }\n    logIncludes = (i) => {\n        return i > -1 && i < this.log.length;\n    }\n}","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, IconButton, Grid, MenuItem, Menu, Button } from '@material-ui/core'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport { ArrowBackIos, ArrowForwardIos, SwapHorizOutlined } from '@material-ui/icons';\nimport Counter from './Counter'\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport ScoreManager from './ScoreManager'\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst theme = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      light: '#000000',\n      main: '#364150',\n      contrastText: '#fff',\n    },\n    // button enabled\n    secondary: {\n      light: '#000000',\n      main: '#C2BDCE',\n      contrastText: '#fff',\n    },\n    // button disabled\n    error: {\n      light: '#000000',\n      main: '#2b2133',\n      contrastText: '#fff',\n    },\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      windowWidth: window.innerWidth,\n      redoEnabled: false,\n      undoEnabled: false,\n      posReversed: false,\n      anchorEl: null,\n      setAnchorEl: null\n    }\n    this.manager = new ScoreManager();\n    this.manager.updateBarInterface = (redo, undo) => {\n      this.setState({\n        redoEnabled: redo,\n        undoEnabled: undo,\n      })\n    }\n\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.addEventListener(\"resize\", null);\n  }\n  handleResize(WindowSize, event) {\n    console.log(\"fooo\")\n    this.setState({ windowWidth: window.innerWidth })\n  }\n\n  handleClick = (event) => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  render() {\n\n    let appBar = (left, right) => {\n      if (this.state.windowWidth > 500) {\n        return (\n          <AppBar position=\"static\" color=\"primary\" style={{ boxShadow: 'none' }}>\n            <Toolbar>\n              <Grid\n                justify=\"space-between\" // Add it here :)\n                container\n              >\n                {left}\n\n                {right}\n\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        )\n      } else {\n        return (\n          <div>\n            <AppBar position=\"static\" color=\"primary\" style={{ boxShadow: 'none' }}>\n              <Toolbar>\n                <Grid\n                  justify=\"space-between\" // Add it here :)\n                  container\n                >\n                  <div />\n\n                  {right}\n\n                </Grid>\n              </Toolbar>\n            </AppBar>\n          </div>\n        )\n      }\n    }\n\n    let title = (\n      <Grid item>\n        <Typography variant=\"h6\" className={this.classes.title}>\n          <img src=\"https://i.imgur.com/WLv1TO2.png\" alt=\"CounterPlus\" height=\"20vw\"\n            style={{\n              position: 'absolute', top: '50%',\n              transform: 'translate(0%, -50%)'\n            }} />\n        </Typography>\n      </Grid>\n    )\n\n    let menu = (\n      <Grid item>\n        <div>\n\n          <ToggleButton\n            value=\"posReversed\"\n            selected={this.state.posReversed}\n            onChange={() => {\n              this.setState({ posReversed: !this.state.posReversed })\n            }}\n            style={{\n              border: 0, bordeRadius: '50'\n            }}\n          >\n            <SwapHorizOutlined color={this.state.posReversed ? \"secondary\" : \"error\"} />\n          </ToggleButton>\n\n          <IconButton aria-label=\"undo\" disabled={!this.state.undoEnabled} className={this.classes.margin}\n            onClick={() => {\n              this.manager.undo();\n            }}>\n            <ArrowBackIos color={this.state.undoEnabled ? \"secondary\" : \"error\"} />\n          </IconButton>\n          <IconButton aria-label=\"redo\" disabled={!this.state.redoEnabled} className={this.classes.margin}\n            onClick={() => {\n              this.manager.redo();\n            }}>\n            <ArrowForwardIos color={this.state.redoEnabled ? \"secondary\" : \"error\"} />\n          </IconButton>\n\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleClick}>\n            <MenuIcon color=\"secondary\" />\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem onClick={() => {\n              let conf = window.confirm('現在のスコアをリセットしても良いですか？');\n              if (conf) {\n                this.manager.reset()\n              }\n              this.handleClose();\n            }}>リセット</MenuItem>\n            <MenuItem onClick={() => {\n              let res = this.manager.result();\n              this.props.history.push({\n                pathname: '/result',\n                state: { result: res }\n              })\n\n            }}>対戦結果を見る</MenuItem>\n          </Menu>\n\n        </div>\n      </Grid>\n    )\n    return (\n      <div className={this.classes.root} >\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n        <RemoveScroll>\n          <MuiThemeProvider theme={theme} >\n            {appBar(title, menu)}\n          </MuiThemeProvider>\n          <div style={{ backgroundColor: '#364150' }}><Counter manager={this.manager} initialPosReversed={this.state.posReversed} /></div>\n        </RemoveScroll>\n      </div >\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(App));","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, IconButton, Grid, MenuItem, Menu, Button, Card, CardContent, CardActions } from '@material-ui/core'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport { ArrowBackIos, ArrowForwardIos, SwapHorizOutlined } from '@material-ui/icons';\nimport Counter from './Counter'\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { FacebookShareButton, TwitterShareButton, FacebookIcon, TwitterIcon } from 'react-share';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst theme = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      light: '#000000',\n      main: '#364150',\n      contrastText: '#fff',\n    },\n    // button enabled\n    secondary: {\n      light: '#000000',\n      main: '#C2BDCE',\n      contrastText: '#fff',\n    },\n    // button disabled\n    error: {\n      light: '#000000',\n      main: '#2b2133',\n      contrastText: '#fff',\n    },\n  },\n});\n\nclass ResultView extends Component {\n\n  constructor(props) {\n    super(props);\n    if (!this.props.location || !this.props.location.state) {\n      this.props.history.push({ pathname: '/' })\n    }\n    this.classes = props.classes;\n    this.state = {\n      windowWidth: window.innerWidth\n    }\n    this.handleResize = this.handleResize.bind(this);\n    console.log(this.props.location.state)\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.addEventListener(\"resize\", null);\n  }\n  handleResize(WindowSize, event) {\n    this.setState({ windowWidth: window.innerWidth })\n  }\n\n  render() {\n    let header = (\n      <div>\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"></meta>\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"></meta>\n        <MuiThemeProvider theme={theme} >\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n              <Grid\n                justify=\"space-between\" // Add it here :)\n                container\n              >\n                <Grid item>\n                  <IconButton aria-label=\"undo\" className={this.classes.margin}\n                    onClick={() => {\n                      this.props.history.push({ pathname: '/' })\n                    }}>\n                    <ArrowBackIos color=\"secondary\" />\n                  </IconButton>\n                </Grid>\n\n                <Grid item>\n                  <img src=\"https://i.imgur.com/WLv1TO2.png\" alt=\"CounterPlus\" height=\"20vw\"\n                    style={{\n                      position: 'absolute', top: '50%',\n                      transform: 'translate(-100%, -50%)'\n                    }} />\n                </Grid>\n\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        </MuiThemeProvider>\n        <div style={{ backgroundColor: '#364150' }}></div>\n      </div>\n    )\n\n    return (\n      <div className={this.classes.root} >\n        {header}\n        <ResultCard data={this.props.location.state.result} classes={this.classes} />\n      </div >\n    );\n  }\n}\n\nclass ResultCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.data = this.props.data\n  }\n\n  subResStr = () => {\n    let arr = this.data.map((res) =>\n      res.p1score + \" - \" + res.p2score,\n    )\n    var res = \"(\"\n    for (var ele of arr) {\n      res += ele + \", \"\n    }\n    res = res.slice(0, res.length - 2);\n    res += \")\"\n    return res\n  }\n\n  render() {\n    let finalRes = this.data[this.data.length - 1];\n    let subRes = this.data.map((res) =>\n      <Typography variant=\"h4\" component=\"p\">\n        {res.p1score} - {res.p2score}\n      </Typography>\n    )\n\n    return (\n      <div>\n        <Card className={this.props.classes.card} style={{\n          margin: 50\n        }}>\n          <CardContent>\n            <div style={{ textAlign: 'center' }}>\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\n                対戦結果\n            </Typography>\n\n              <Typography variant=\"h1\" component=\"h1\">\n                {finalRes.p1set} - {finalRes.p2set}\n              </Typography>\n              <Typography className={this.props.classes.pos} variant=\"h5\" color=\"textSecondary\" style={{ padding: 15 }}>\n                各セット スコア\n            </Typography>\n              {subRes}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Grid\n          justify=\"flex-end\" // Add it here :)\n          container\n        >\n          <FacebookShareButton url={\"https://caprolactam2450.github.io/CounterPlus/\"}>\n            <FacebookIcon round />\n          </FacebookShareButton>\n          <TwitterShareButton url={\"https://caprolactam2450.github.io/CounterPlus/\"}\n            title={\"試合の結果\\n\" + finalRes.p1set + \" - \" + finalRes.p2set + this.subResStr() + \"\\n\"}\n            via={\"CounterPlus\"}\n            style={{ paddingLeft: 10, paddingRight: 20 }}>\n            <TwitterIcon round />\n          </TwitterShareButton>\n\n        </Grid>\n\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(ResultView));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Result from './Result';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter,\n    Route,\n    Link\n} from 'react-router-dom'\n\nconst Router = () => (\n    <BrowserRouter>\n        <div>\n            <Route exact path='/' component={App} />\n            <Route path='/result' component={Result} />\n        </div>\n    </BrowserRouter>\n)\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}