{"version":3,"sources":["Counter.js","ScoreManager.js","App.js","serviceWorker.js","index.js"],"names":["Counter","props","eventLogger","e","data","console","log","state","p1","score","set","p2","leftServes","posReversed","manager","updateContentInterface","p1_","p2_","leftServes_","posReversed_","setState","scoreViews","this","map","isP1","scoreData","onPositiveSwipe","addScore","onNegativeSwipe","minusScore","serveIndicate","style","display","flexDirection","alignItems","justifyContent","Component","ScoreView","offset","onStartSwipe","y","onFinishSwipe","rate","window","innerHeight","windowHeight","windowWidth","innerWidth","handleResize","bind","addEventListener","WindowSize","event","axis","handle","defaultPosition","x","position","grid","scale","onStart","onDrag","handleDrag","onStop","className","width","fontSize","height","Grid","container","spacing","direction","justify","minHeight","item","xs","textAlign","marginTop","color","Math","min","userSelect","margin","marginBottom","padding","size","border","xor","a","b","Score","servReversed","p1set","p2set","Player","ScoreManager","isSetFinished","proceedNextSet","changeScore","isPlus","changeServReversed","pushHistory","updateInterface","isPosReversed","updateBarInterface","logIncludes","logIndex","isP1Winner","isDeuce","primServReversed","floor","undo","restoreFromLog","redo","newEle","length","push","slice","i","abs","gameset","useStyles","makeStyles","theme","root","flexGrow","title","createMuiTheme","type","palette","primary","light","main","contrastText","secondary","error","App","classes","redoEnabled","undoEnabled","name","content","MuiThemeProvider","AppBar","Toolbar","Typography","variant","src","alt","top","transform","IconButton","aria-label","disabled","onClick","ArrowBackIos","ArrowForwardIos","backgroundColor","withStyles","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mWAIMA,E,YAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KA+BVC,YAAc,SAACC,EAAGC,GACdC,QAAQC,IAAI,UAAWH,GACvBE,QAAQC,IAAI,SAAUF,IAhCtB,EAAKG,MAAQ,CACTC,GAAI,CACAC,MAAO,EACPC,IAAK,GAETC,GAAI,CACAF,MAAO,EACPC,IAAK,GAETE,YAAY,EACZC,aAAa,GAEjB,EAAKC,QAAU,EAAKb,MAAMa,QAC1B,EAAKA,QAAQC,uBAAyB,SAACC,EAAKC,EAAKC,EAAaC,GAC1D,EAAKC,SAAS,CACVZ,GAAI,CACAC,MAAOO,EAAIP,MACXC,IAAKM,EAAIN,KAEbC,GAAI,CACAF,MAAOQ,EAAIR,MACXC,IAAKO,EAAIP,KAEbE,WAAYM,EACZL,YAAaM,IAEjBd,QAAQC,IAAIY,IA5BD,E,sEAqCT,IAAD,OAEDG,GAAeC,KAAKf,MAAMM,YAA8B,EAAC,GAAO,GAAxB,EAAC,GAAM,IAAwBU,KAAI,SAACC,GAC5E,OACI,kBAAC,EAAD,CACIC,UAAWD,EAAO,EAAKjB,MAAMC,GAAK,EAAKD,MAAMI,GAC7Ce,gBAAiB,WACb,EAAKZ,QAAQa,SAASH,IAE1BI,gBAAiB,WACb,EAAKd,QAAQe,WAAWL,IAG5BM,cAAeN,EAAO,EAAKjB,MAAMK,YAAc,EAAKL,MAAMK,gBAKtE,OACI,yBAAKmB,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,WAAY,SAAUC,eAAgB,WACtFd,O,GA3DKe,aAiEhBC,E,YAGF,aAAe,IAAD,8BACV,+CAHJC,OAAS,EAEK,EAkBdC,aAAe,SAACpC,EAAGC,GACf,EAAKkC,OAASlC,EAAKoC,GAnBT,EAsBdC,cAAgB,SAACtC,EAAGC,GAChB,IAEIsC,GAFStC,EAAKoC,EAAI,EAAKF,QACdK,OAAOC,YAGhBF,EAAO,GACP,EAAKzC,MAAMyB,kBACJgB,GAAQ,IACf,EAAKzC,MAAM2B,mBA5Bf,EAAKrB,MAAQ,CACTsC,aAAcF,OAAOC,YACrBE,YAAaH,OAAOI,YAExB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANV,E,iFASVN,OAAOO,iBAAiB,SAAU5B,KAAK0B,gB,6CAGvCL,OAAOO,iBAAiB,SAAU,Q,mCAEzBC,EAAYC,GACrB9B,KAAKF,SAAS,CAAEyB,aAAcF,OAAOC,YAAaE,YAAaH,OAAOI,e,+BA4BtE,OACI,kBAAC,IAAD,CACIM,KAAK,OACLC,OAAO,UACPC,gBAAiB,CAAEC,EAAG,EAAGhB,EAAG,GAC5BiB,SAAU,KACVC,KAAM,CAAC,GAAI,IACXC,MAAO,EACPC,QAAStC,KAAKiB,aACdsB,OAAQvC,KAAKwC,WACbC,OAAQzC,KAAKmB,eACb,6BACI,yBAAKuB,UAAU,SAASjC,MAlBxB,CACRkC,MAAO,OACPC,SAAU,MACVC,OAAQ,UAkBI,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVrC,WAAW,SACXsC,QAAQ,SACRzC,MAAO,CAAE0C,UAAW,UAEpB,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACX,6BACI,yBAAK5C,MAAO,CACR6C,UAAW,SAAUC,WAAY,KAEjC,wBAAI9C,MAAO,CACP+C,MAAO,OACPZ,SAAUa,KAAKC,IAA8B,GAA1B1D,KAAKf,MAAMsC,aAA6C,IAAzBvB,KAAKf,MAAMuC,aAC7DmC,WAAY,OAAQC,OAAQ,EAAGC,aAAc,IAAKC,QAAS,IAC3D9D,KAAKrB,MAAMwB,UAAUhB,OACzB,wBAAIsB,MAAO,CACP+C,MAAO,OACPZ,SAAUa,KAAKC,IAA8B,GAA1B1D,KAAKf,MAAMsC,aAA6C,GAAzBvB,KAAKf,MAAMuC,aAC7DmC,WAAY,OAAQC,OAAQ,IAC5B5D,KAAKrB,MAAMwB,UAAUf,MAE7B,wBAAI2E,KAAK,IAAItD,MAAO,CAAEuD,OAAQ,GAAKR,MAAOxD,KAAKrB,MAAM6B,cAAgB,UAAY,0B,GArF7FM,aAkGTpC,I,wBCvKTuF,EAAM,SAACC,EAAGC,GACZ,OAAQD,GAAKC,MAAQD,GAAKC,IAGxBC,EACF,WAAYlF,EAAIG,EAAIgF,EAAc9E,GAAc,oBAC5CS,KAAKd,GAAKA,EAAGC,MACba,KAAKX,GAAKA,EAAGF,MACba,KAAKsE,MAAQpF,EAAGE,IAChBY,KAAKuE,MAAQlF,EAAGD,IAChBY,KAAKqE,aAAeA,EACpBrE,KAAKT,YAAcA,GAIrBiF,EACF,aAAe,oBACXxE,KAAKb,MAAQ,EACba,KAAKZ,IAAM,GAIEqF,EACjB,aAAe,IAAD,gCAgBdpE,SAAW,SAACH,GACJ,EAAKwE,gBACL,EAAKC,iBAGT,EAAKC,YAAY1E,GAAM,IArBb,KAwBdK,WAAa,SAACL,GACLA,GAAQ,EAAKhB,GAAGC,MAAQ,IAAQe,GAAQ,EAAKb,GAAGF,MAAQ,GAG7D,EAAKyF,YAAY1E,GAAM,IA5Bb,KA+Bd0E,YAAc,SAAC1E,EAAM2E,GACb3E,EACA,EAAKhB,GAAGC,OAAS0F,EAAS,GAAK,EAE/B,EAAKxF,GAAGF,OAAS0F,EAAS,GAAK,EAEnC,EAAKC,qBACL,EAAKC,cACL,EAAKC,mBAvCK,KAyCdA,gBAAkB,WACd,EAAKvF,uBAAuB,EAAKP,GAAI,EAAKG,GAAI,EAAKC,aAAc,EAAK2F,iBACtE,EAAKC,mBAAmB,EAAKC,YAAY,EAAKC,SAAW,GAAI,EAAKD,YAAY,EAAKC,SAAW,KA3CpF,KA8CdT,eAAiB,WACb,IAAIU,EAAa,EAAKnG,GAAGC,MAAQ,EAAKE,GAAGF,MACzC,EAAKD,GAAGC,MAAQ,EAChB,EAAKE,GAAGF,MAAQ,EACZkG,EACA,EAAKnG,GAAGE,KAAO,EAEf,EAAKC,GAAGD,KAAO,EAGnB,EAAKG,aAAe,EAAKL,GAAGE,IAAM,EAAKC,GAAGD,KAAO,IAAM,EAEvD,EAAK0F,qBACL,EAAKC,cACL,EAAKC,mBA5DK,KA+DdF,mBAAqB,WACb,EAAKQ,UACL,EAAKjB,aAAeJ,GAAK,EAAK/E,GAAGC,MAAQ,EAAKE,GAAGF,OAAS,IAAM,GAAI,EAAKoG,kBAEzE,EAAKlB,aAAeJ,EAAIR,KAAK+B,OAAO,EAAKtG,GAAGC,MAAQ,EAAKE,GAAGF,OAAS,GAAK,IAAM,GAAI,EAAKoG,mBAnEnF,KAuEdE,KAAO,WACC,EAAKN,YAAY,EAAKC,SAAW,KACjC,EAAKA,WACL,EAAKM,eAAe,EAAKN,YA1EnB,KA8EdO,KAAO,WACC,EAAKR,YAAY,EAAKC,SAAW,KACjC,EAAKA,WACL,EAAKM,eAAe,EAAKN,YAjFnB,KAqFdL,YAAc,WACV,IAAIa,EAAS,IAAIxB,EAAM,EAAKlF,GAAI,EAAKG,GAAI,EAAKgF,aAAc,EAAK9E,aAC7D,EAAKP,IAAI6G,SAAW,EAAKT,SAAW,EACpC,EAAKpG,IAAI8G,KAAKF,GACP,EAAK5G,IAAI6G,OAAS,EAAKT,SAAW,GAEzC,EAAKpG,IAAM,EAAKA,IAAI+G,MAAM,EAAG,EAAKX,SAAW,GAC7C,EAAKpG,IAAI8G,KAAKF,IAEd7G,QAAQC,IAAI,yBAEhB,EAAKoG,YAhGK,KAmGdM,eAAiB,SAACM,GACd,IAAIhH,EAAM,EAAKA,IAAIgH,GACnB,EAAK9G,GAAGC,MAAQH,EAAIE,GACpB,EAAKG,GAAGF,MAAQH,EAAIK,GACpB,EAAKH,GAAGE,IAAMJ,EAAIsF,MAClB,EAAKjF,GAAGD,IAAMJ,EAAIuF,MAClB,EAAKF,aAAerF,EAAIqF,aACxB,EAAK9E,YAAcP,EAAIO,YAEvB,EAAKyF,mBA5GK,KA+GdM,QAAU,WACN,OAAO,EAAKpG,GAAGC,MAAQ,GAAK,EAAKE,GAAGF,MAAQ,GAhHlC,KAmHduF,cAAgB,WACZ,OAAOjB,KAAKwC,IAAI,EAAK/G,GAAGC,MAAQ,EAAKE,GAAGF,OAAS,IAAM,EAAKD,GAAGC,MAAQ,IAAM,EAAKE,GAAGF,MAAQ,KApHnF,KAsHd8F,cAAgB,WACZ,OAAOhB,EAAI,EAAK1E,YAAa,EAAKgG,mBAvHxB,KAyHdjG,WAAa,WACT,OAAQ2E,EAAI,EAAKsB,iBAAkBtB,EAAI,EAAK1E,YAAa,EAAK8E,gBA1HpD,KA4Hdc,YAAc,SAACa,GACX,OAAOA,GAAK,GAAKA,EAAI,EAAKhH,IAAI6G,QA5H9B7F,KAAKd,GAAK,IAAIsF,EACdxE,KAAKX,GAAK,IAAImF,EAEdxE,KAAKqE,cAAe,EACpBrE,KAAKT,aAAc,EAGnBS,KAAKuF,kBAAmB,EAExBvF,KAAKkG,QAAU,EAEflG,KAAKhB,IAAM,CAAC,IAAIoF,EAAMpE,KAAKd,GAAIc,KAAKX,GAAIW,KAAKqE,aAAcrE,KAAKT,cAChES,KAAKoF,SAAW,GCvBlBe,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLD,SAAU,OAIRF,EAAQI,YAAe,CAC3BC,KAAM,QACNC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,aAAc,QAGhBC,UAAW,CACTH,MAAO,UACPC,KAAM,UACNC,aAAc,QAGhBE,MAAO,CACLJ,MAAO,UACPC,KAAM,UACNC,aAAc,WAKdG,E,YAEJ,WAAYvI,GAAQ,IAAD,8BACjB,+CACKwI,QAAUxI,EAAMwI,QACrBpI,QAAQC,IAAI,EAAKmI,SACjB,EAAKlI,MAAQ,CACXmI,aAAa,EACbC,aAAa,GAEf,EAAK7H,QAAU,IAAIiF,EACnB,EAAKjF,QAAQ0F,mBAAqB,SAACS,EAAMF,GACvC,EAAK3F,SAAS,CACZsH,YAAazB,EACb0B,YAAa5B,KAZA,E,sEAiBT,IAAD,OACP,OACE,yBAAK/C,UAAW1C,KAAKmH,QAAQb,MAC3B,0BAAMgB,KAAK,+BAA+BC,QAAQ,QAClD,0BAAMD,KAAK,wCAAwCC,QAAQ,sBAC3D,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAkBnB,MAAOA,GACvB,kBAACoB,EAAA,EAAD,CAAQtF,SAAS,SAASqB,MAAM,WAC9B,kBAACkE,EAAA,EAAD,KAEE,kBAAC5E,EAAA,EAAD,CACEI,QAAQ,gBACRH,WAAS,GAET,kBAACD,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACuE,EAAA,EAAD,CAAYC,QAAQ,KAAKlF,UAAW1C,KAAKmH,QAAQX,OAC/C,yBAAKqB,IAAI,kCAAkCC,IAAI,cAAcjF,OAAO,OAClEpC,MAAO,CACL0B,SAAU,WAAY4F,IAAK,MAC3BC,UAAW,2BAKnB,kBAAClF,EAAA,EAAD,CAAMM,MAAI,GACR,6BACE,kBAAC6E,EAAA,EAAD,CAAYC,aAAW,OAAOC,UAAWnI,KAAKf,MAAMoI,YAAa3E,UAAW1C,KAAKmH,QAAQvD,OACvFwE,QAAS,WACP,EAAK5I,QAAQiG,SAEf,kBAAC4C,EAAA,EAAD,CAAc7E,MAAOxD,KAAKf,MAAMoI,YAAc,YAAc,WAE9D,kBAACY,EAAA,EAAD,CAAYC,aAAW,OAAOC,UAAWnI,KAAKf,MAAMmI,YAAa1E,UAAW1C,KAAKmH,QAAQvD,OACvFwE,QAAS,WACP,EAAK5I,QAAQmG,SAEf,kBAAC2C,EAAA,EAAD,CAAiB9E,MAAOxD,KAAKf,MAAMmI,YAAc,YAAc,iBAQ7E,yBAAK3G,MAAO,CAAE8H,gBAAiB,YAAa,kBAAC,EAAD,CAAS/I,QAASQ,KAAKR,iB,GA/D3DsB,aAsEH0H,cAAWrC,EAAXqC,CAAsBtB,GCvGjBuB,QACW,cAA7BpH,OAAOqH,SAASC,UAEe,UAA7BtH,OAAOqH,SAASC,UAEhBtH,OAAOqH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.862019d0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Draggable from 'react-draggable';\nimport { Grid } from '@material-ui/core'\n\nclass Counter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            p1: {\n                score: 0,\n                set: 0\n            },\n            p2: {\n                score: 0,\n                set: 0\n            },\n            leftServes: true,\n            posReversed: false\n        }\n        this.manager = this.props.manager;\n        this.manager.updateContentInterface = (p1_, p2_, leftServes_, posReversed_) => {\n            this.setState({\n                p1: {\n                    score: p1_.score,\n                    set: p1_.set\n                },\n                p2: {\n                    score: p2_.score,\n                    set: p2_.set\n                },\n                leftServes: leftServes_,\n                posReversed: posReversed_\n            })\n            console.log(leftServes_)\n        }\n    }\n\n    eventLogger = (e, data) => {\n        console.log('Event: ', e);\n        console.log('Data: ', data);\n    };\n\n    render() {\n\n        var scoreViews = (!this.state.posReversed ? [true, false] : [false, true]).map((isP1) => {\n            return (\n                <ScoreView\n                    scoreData={isP1 ? this.state.p1 : this.state.p2}\n                    onPositiveSwipe={() => {\n                        this.manager.addScore(isP1);\n                    }}\n                    onNegativeSwipe={() => {\n                        this.manager.minusScore(isP1);\n                    }\n                    }\n                    serveIndicate={isP1 ? this.state.leftServes : !this.state.leftServes}\n                />\n            )\n        })\n\n        return (\n            <div style={{ display: 'flex', flexDirection: 'col', alignItems: 'center', justifyContent: 'center' }}>\n                {scoreViews}\n            </div>\n        )\n    }\n}\n\nclass ScoreView extends Component {\n    offset = 0\n\n    constructor() {\n        super();\n        this.state = {\n            windowHeight: window.innerHeight,\n            windowWidth: window.innerWidth\n        }\n        this.handleResize = this.handleResize.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n    componentWillUnmount() {\n        window.addEventListener(\"resize\", null);\n    }\n    handleResize(WindowSize, event) {\n        this.setState({ windowHeight: window.innerHeight, windowWidth: window.innerWidth })\n    }\n\n    onStartSwipe = (e, data) => {\n        this.offset = data.y\n    };\n\n    onFinishSwipe = (e, data) => {\n        let deltaY = data.y - this.offset;\n        let height = window.innerHeight;\n        let rate = deltaY / height;\n\n        if (rate > 0.3) {\n            this.props.onPositiveSwipe();\n        } else if (rate < -0.3) {\n            this.props.onNegativeSwipe();\n        }\n    };\n\n    render() {\n\n        // スワイプ量に合わせて、要素の位置を変更する.\n        let style = {\n            width: '50vw',\n            fontSize: '100',\n            height: '100vh',\n        }\n\n        return (\n            <Draggable\n                axis=\"none\"\n                handle=\".handle\"\n                defaultPosition={{ x: 0, y: 0 }}\n                position={null}\n                grid={[25, 25]}\n                scale={1}\n                onStart={this.onStartSwipe}\n                onDrag={this.handleDrag}\n                onStop={this.onFinishSwipe}>\n                <div>\n                    <div className=\"handle\" style={style}>\n\n\n                        <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh' }}\n                        >\n                            <Grid item xs={12}>\n                                <div>\n                                    <div style={{\n                                        textAlign: 'center', marginTop: -70\n                                    }}>\n                                        <h1 style={{\n                                            color: '#fff',\n                                            fontSize: Math.min(this.state.windowHeight * 0.5, this.state.windowWidth * 0.45),\n                                            userSelect: 'none', margin: 0, marginBottom: '0', padding: 0\n                                        }}>{this.props.scoreData.score}</h1>\n                                        <h2 style={{\n                                            color: '#fff',\n                                            fontSize: Math.min(this.state.windowHeight * 0.2, this.state.windowWidth * 0.2),\n                                            userSelect: 'none', margin: 0\n                                        }}>{this.props.scoreData.set}</h2>\n                                    </div>\n                                    <hr size=\"8\" style={{ border: 0 }} color={this.props.serveIndicate ? '#ff2477' : 'transparent'} />\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                </div>\n            </Draggable>\n\n        )\n    }\n}\n\nexport default Counter\n","const xor = (a, b) => {\n    return (a || b) && !(a && b);\n}\n\nclass Score {\n    constructor(p1, p2, servReversed, posReversed) {\n        this.p1 = p1.score;\n        this.p2 = p2.score;\n        this.p1set = p1.set;\n        this.p2set = p2.set;\n        this.servReversed = servReversed;\n        this.posReversed = posReversed;\n    }\n}\n\nclass Player {\n    constructor() {\n        this.score = 0;\n        this.set = 0;\n    }\n}\n\nexport default class ScoreManager {\n    constructor() {\n        this.p1 = new Player();\n        this.p2 = new Player();\n\n        this.servReversed = false;\n        this.posReversed = false;\n\n        // once this is set, this will never changed\n        this.primServReversed = false;\n\n        this.gameset = 5;\n\n        this.log = [new Score(this.p1, this.p2, this.servReversed, this.posReversed)];\n        this.logIndex = 0;\n    }\n\n    addScore = (isP1) => {\n        if (this.isSetFinished()) {\n            this.proceedNextSet()\n            return;\n        }\n        this.changeScore(isP1, true);\n    }\n\n    minusScore = (isP1) => {\n        if ((isP1 && this.p1.score < 1) || (!isP1 && this.p2.score < 1)) {\n            return;\n        }\n        this.changeScore(isP1, false);\n    }\n\n    changeScore = (isP1, isPlus) => {\n        if (isP1) {\n            this.p1.score += isPlus ? 1 : -1;\n        } else {\n            this.p2.score += isPlus ? 1 : -1;\n        }\n        this.changeServReversed();\n        this.pushHistory();\n        this.updateInterface();\n    }\n    updateInterface = () => {\n        this.updateContentInterface(this.p1, this.p2, this.leftServes(), this.isPosReversed());\n        this.updateBarInterface(this.logIncludes(this.logIndex + 1), this.logIncludes(this.logIndex - 1));\n    }\n\n    proceedNextSet = () => {\n        let isP1Winner = this.p1.score > this.p2.score;\n        this.p1.score = 0;\n        this.p2.score = 0;\n        if (isP1Winner) {\n            this.p1.set += 1;\n        } else {\n            this.p2.set += 1;\n        }\n\n        this.posReversed = (this.p1.set + this.p2.set) % 2 === 1\n\n        this.changeServReversed();\n        this.pushHistory();\n        this.updateInterface();\n    }\n\n    changeServReversed = () => {\n        if (this.isDeuce()) {\n            this.servReversed = xor((this.p1.score + this.p2.score) % 2 === 0, !this.primServReversed);\n        } else {\n            this.servReversed = xor(Math.floor((this.p1.score + this.p2.score) / 2) % 2 === 0, !this.primServReversed);\n        }\n    }\n\n    undo = () => {\n        if (this.logIncludes(this.logIndex - 1)) {\n            this.logIndex--;\n            this.restoreFromLog(this.logIndex);\n        }\n    }\n\n    redo = () => {\n        if (this.logIncludes(this.logIndex + 1)) {\n            this.logIndex++;\n            this.restoreFromLog(this.logIndex);\n        }\n    }\n\n    pushHistory = () => {\n        let newEle = new Score(this.p1, this.p2, this.servReversed, this.posReversed);\n        if (this.log.length === this.logIndex + 1) {\n            this.log.push(newEle);\n        } else if (this.log.length > this.logIndex + 1) {\n            // override cache\n            this.log = this.log.slice(0, this.logIndex + 1);\n            this.log.push(newEle);\n        } else {\n            console.log('unknown issue occured')\n        }\n        this.logIndex++;\n    }\n\n    restoreFromLog = (i) => {\n        let log = this.log[i];\n        this.p1.score = log.p1;\n        this.p2.score = log.p2;\n        this.p1.set = log.p1set;\n        this.p2.set = log.p2set;\n        this.servReversed = log.servReversed;\n        this.posReversed = log.posReversed;\n\n        this.updateInterface();\n    }\n\n    isDeuce = () => {\n        return this.p1.score > 9 && this.p2.score > 9;\n    }\n\n    isSetFinished = () => {\n        return Math.abs(this.p1.score - this.p2.score) > 1 && (this.p1.score > 10 || this.p2.score > 10);\n    }\n    isPosReversed = () => {\n        return xor(this.posReversed, this.primServReversed);\n    }\n    leftServes = () => {\n        return !xor(this.primServReversed, xor(this.posReversed, this.servReversed))\n    }\n    logIncludes = (i) => {\n        return i > -1 && i < this.log.length;\n    }\n}","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Typography, IconButton, Grid } from '@material-ui/core'\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport Counter from './Counter'\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport ScoreManager from './ScoreManager'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst theme = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      light: '#000000',\n      main: '#364150',\n      contrastText: '#fff',\n    },\n    // button enabled\n    secondary: {\n      light: '#000000',\n      main: '#C2BDCE',\n      contrastText: '#fff',\n    },\n    // button disabled\n    error: {\n      light: '#000000',\n      main: '#2b2133',\n      contrastText: '#fff',\n    },\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.classes = props.classes;\n    console.log(this.classes)\n    this.state = {\n      redoEnabled: false,\n      undoEnabled: false\n    }\n    this.manager = new ScoreManager();\n    this.manager.updateBarInterface = (redo, undo) => {\n      this.setState({\n        redoEnabled: redo,\n        undoEnabled: undo\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.classes.root} >\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"></meta>\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"></meta>\n        <RemoveScroll>\n          <MuiThemeProvider theme={theme} >\n            <AppBar position=\"static\" color=\"primary\">\n              <Toolbar>\n\n                <Grid\n                  justify=\"space-between\" // Add it here :)\n                  container\n                >\n                  <Grid item>\n                    <Typography variant=\"h6\" className={this.classes.title}>\n                      <img src=\"https://i.imgur.com/WLv1TO2.png\" alt=\"CounterPlus\" height=\"20vw\"\n                        style={{\n                          position: 'absolute', top: '50%',\n                          transform: 'translate(0%, -50%)'\n                        }} />\n                    </Typography>\n                  </Grid>\n\n                  <Grid item>\n                    <div>\n                      <IconButton aria-label=\"undo\" disabled={!this.state.undoEnabled} className={this.classes.margin}\n                        onClick={() => {\n                          this.manager.undo();\n                        }}>\n                        <ArrowBackIos color={this.state.undoEnabled ? \"secondary\" : \"error\"} />\n                      </IconButton>\n                      <IconButton aria-label=\"redo\" disabled={!this.state.redoEnabled} className={this.classes.margin}\n                        onClick={() => {\n                          this.manager.redo();\n                        }}>\n                        <ArrowForwardIos color={this.state.redoEnabled ? \"secondary\" : \"error\"} />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Toolbar>\n            </AppBar>\n          </MuiThemeProvider>\n          <div style={{ backgroundColor: '#364150' }}><Counter manager={this.manager} /></div>\n        </RemoveScroll>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(useStyles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}