{"version":3,"sources":["Counter.js","ScoreManager.js","App.js","Result.js","serviceWorker.js","index.js"],"names":["Counter","props","state","p1","score","set","p2","leftServes","posReversed","manager","updateContentInterface","p1_","p2_","leftServes_","posReversed_","setState","a","b","scoreViews","this","initialPosReversed","map","isP1","scoreData","onPositiveSwipe","swipeReversed","minusScore","addScore","onNegativeSwipe","serveIndicate","key","style","display","flexDirection","alignItems","justifyContent","position","backgroundColor","paddingTop","Component","Notification","windowHeight","window","innerHeight","windowWidth","innerWidth","handleResize","bind","addEventListener","WindowSize","event","setTimeout","marginTop","width","Box","color","bgcolor","fontSize","Math","min","p","xs","sm","md","borderRadius","ScoreView","offset","onStartSwipe","e","data","y","onFinishSwipe","deltaY","height","axis","handle","defaultPosition","x","grid","scale","onStart","onDrag","handleDrag","onStop","className","Grid","container","spacing","direction","justify","minHeight","item","textAlign","userSelect","margin","marginBottom","padding","size","border","xor","Score","servReversed","p1set","p2set","Player","ScoreManager","changeGameset","n","gameSetNum","finalSetNum","calcFinalSetNum","console","log","floor","isSetFinished","proceedNextSet","changeScore","isPlus","finalSetChangeCoatHasDone","alert","finalSetReversed","changeServReversed","pushHistory","updateInterface","isPosReversed","updateBarInterface","logIncludes","logIndex","isP1Winner","res","result","onEndGame","isDeuce","primServReversed","undo","restoreFromLog","redo","newEle","length","push","slice","i","reset","setResults","p1score","p2score","setResult","abs","useStyles","makeStyles","theme","root","flexGrow","title","createMuiTheme","type","palette","primary","light","main","contrastText","secondary","error","App","handleClick","anchorEl","currentTarget","handleClose","classes","redoEnabled","undoEnabled","setAnchorEl","setNum","history","pathname","scrollTo","left","right","menu","ToggleButton","value","selected","onChange","bordeRadius","SwapHorizOutlined","IconButton","aria-label","disabled","onClick","ArrowBackIos","ArrowForwardIos","Button","aria-controls","aria-haspopup","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","confirm","FormControlLabel","control","Checkbox","checked","label","labelPlacement","marginLeft","FormControl","Select","target","name","inputProps","Helmet","content","MuiThemeProvider","iconSize","transform","Typography","variant","src","alt","top","AppBar","boxShadow","Toolbar","withRouter","withStyles","card","minWidth","bullet","ResultView","location","header","ResultCard","subResStr","arr","finalRes","subRes","Array","keys","component","Card","CardContent","gutterBottom","pos","FacebookShareButton","url","FacebookIcon","round","TwitterShareButton","via","paddingLeft","paddingRight","TwitterIcon","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","exact","path","Result","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad00522e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Draggable from 'react-draggable';\nimport { Grid, Box } from '@material-ui/core'\n\nconst xor = (a, b) => {\n    return (a || b) && !(a && b);\n}\n\nclass Counter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            p1: {\n                score: 0,\n                set: 0\n            },\n            p2: {\n                score: 0,\n                set: 0\n            },\n            leftServes: true,\n            posReversed: false\n        }\n        this.manager = this.props.manager;\n        this.manager.updateContentInterface = (p1_, p2_, leftServes_, posReversed_) => {\n            this.setState({\n                p1: {\n                    score: p1_.score,\n                    set: p1_.set\n                },\n                p2: {\n                    score: p2_.score,\n                    set: p2_.set\n                },\n                leftServes: leftServes_,\n                posReversed: posReversed_\n            })\n        }\n    }\n    render() {\n        var scoreViews = (!xor(this.state.posReversed, this.props.initialPosReversed) ? [true, false] : [false, true]).map((isP1) => {\n            return (\n                <ScoreView\n                    scoreData={isP1 ? this.state.p1 : this.state.p2}\n                    onPositiveSwipe={() => {\n                        if (!this.props.swipeReversed) {\n                            this.manager.addScore(isP1);\n                        } else {\n                            this.manager.minusScore(isP1);\n                        }\n                    }}\n                    onNegativeSwipe={() => {\n                        if (!this.props.swipeReversed) {\n                            this.manager.minusScore(isP1);\n                        } else {\n                            this.manager.addScore(isP1);\n                        }\n\n                    }\n                    }\n                    serveIndicate={isP1 ? this.state.leftServes : !this.state.leftServes}\n                    key={isP1 ? 0 : 1}\n                />\n            )\n        })\n\n        return (\n            <div>\n\n                <div style={{ display: 'flex', flexDirection: 'col', alignItems: 'center', justifyContent: 'center', position: 'absolute', backgroundColor: '#364150', paddingTop: 30 }}>\n                    {scoreViews}\n                </div>\n                {(this.state.p1.score + this.state.p2.score) % 6 === 0 && (this.state.p1.score > 0 || this.state.p2.score > 0) ? <Notification /> : null}\n\n            </div>\n        )\n    }\n}\n\n\nclass Notification extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            windowHeight: window.innerHeight,\n            windowWidth: window.innerWidth\n        }\n        this.handleResize = this.handleResize.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n    componentWillUnmount() {\n        window.addEventListener(\"resize\", null);\n    }\n    handleResize(WindowSize, event) {\n        setTimeout(function () {\n            this.setState({ windowHeight: window.innerHeight, windowWidth: window.innerWidth })\n        }.bind(this), 500)\n    }\n\n    render() {\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center', position: 'absolute', marginTop: 80, width: '100vw' }}>\n                <Box\n                    color=\"#fff\"\n                    bgcolor=\"rgba(0,0,0,0.5)\"\n                    fontSize={Math.min(this.state.windowHeight * 0.08, this.state.windowWidth * 0.08)}\n                    p={{ xs: 2, sm: 3, md: 4 }}\n                    style={{ borderRadius: 15 }}\n                >\n                    タオル使用可能\n                </Box>\n            </div>\n\n        )\n    }\n}\n\nclass ScoreView extends Component {\n    offset = 0\n\n    constructor() {\n        super();\n        this.state = {\n            windowHeight: window.innerHeight,\n            windowWidth: window.innerWidth\n        }\n        this.handleResize = this.handleResize.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n    componentWillUnmount() {\n        window.addEventListener(\"resize\", null);\n    }\n    handleResize(WindowSize, event) {\n        setTimeout(function () {\n            this.setState({ windowHeight: window.innerHeight, windowWidth: window.innerWidth })\n        }.bind(this), 500)\n    }\n\n    onStartSwipe = (e, data) => {\n        this.offset = data.y\n    };\n\n    onFinishSwipe = (e, data) => {\n        let deltaY = data.y - this.offset;\n\n        if (deltaY > 100) {\n            this.props.onPositiveSwipe();\n        } else if (deltaY < -100) {\n            this.props.onNegativeSwipe();\n        }\n    };\n\n    render() {\n\n        // スワイプ量に合わせて、要素の位置を変更する.\n        let style = {\n            width: '50vw',\n            fontSize: '100',\n            height: this.state.windowHeight,\n        }\n\n        return (\n            <Draggable\n                axis=\"none\"\n                handle=\".handle\"\n                defaultPosition={{ x: 0, y: 0 }}\n                position={null}\n                grid={[25, 25]}\n                scale={1}\n                onStart={this.onStartSwipe}\n                onDrag={this.handleDrag}\n                onStop={this.onFinishSwipe}>\n                <div>\n                    <div className=\"handle\" style={style}>\n\n\n                        <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            style={{ minHeight: '100vh' }}\n                        >\n                            <Grid item xs={12}>\n                                <div>\n                                    <div style={{\n                                        textAlign: 'center', marginTop: -70\n                                    }}>\n                                        <h1 style={{\n                                            color: '#fff',\n                                            fontSize: Math.min(this.state.windowHeight * 0.45, this.state.windowWidth * 0.45),\n                                            userSelect: 'none', margin: 0, marginBottom: '0', padding: 0\n                                        }}>{this.props.scoreData.score}</h1>\n                                        <h2 style={{\n                                            color: '#fff',\n                                            fontSize: Math.min(this.state.windowHeight * 0.1, this.state.windowWidth * 0.2),\n                                            userSelect: 'none', margin: 0\n                                        }}>{this.props.scoreData.set}</h2>\n                                    </div>\n                                    <hr size=\"8\" style={{ border: 0, width: Math.min(this.state.windowHeight * 0.5, this.state.windowWidth * 0.45) }} color={this.props.serveIndicate ? '#ff2477' : 'transparent'} />\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                </div>\n            </Draggable>\n\n        )\n    }\n}\n\nexport default Counter\n","const xor = (a, b) => {\n    return (a || b) && !(a && b);\n}\n\nclass Score {\n    constructor(p1, p2, servReversed, posReversed) {\n        this.p1 = p1.score;\n        this.p2 = p2.score;\n        this.p1set = p1.set;\n        this.p2set = p2.set;\n        this.servReversed = servReversed;\n        this.posReversed = posReversed;\n    }\n}\n\nclass Player {\n    constructor() {\n        this.score = 0;\n        this.set = 0;\n    }\n}\n\nexport default class ScoreManager {\n    constructor() {\n        this.p1 = new Player();\n        this.p2 = new Player();\n\n        this.servReversed = false;\n        this.posReversed = false;\n        this.finalSetChangeCoatHasDone = false\n        this.finalSetReversed = false\n\n        this.log = [new Score(this.p1, this.p2, this.servReversed, this.posReversed)];\n        this.logIndex = 0;\n\n        this.changeGameset(5);\n    }\n\n    changeGameset = (n) => {\n        this.gameSetNum = n;\n        this.finalSetNum = this.calcFinalSetNum(n);\n        console.log(this.finalSetNum)\n    }\n\n    calcFinalSetNum = (n) => {\n        return Math.floor(n / 2)\n    }\n\n    addScore = (isP1) => {\n        if (this.isSetFinished()) {\n            this.proceedNextSet()\n            return;\n        }\n        this.changeScore(isP1, true);\n    }\n\n    minusScore = (isP1) => {\n        if ((isP1 && this.p1.score < 1) || (!isP1 && this.p2.score < 1)) {\n            return;\n        }\n        this.changeScore(isP1, false);\n    }\n\n    changeScore = (isP1, isPlus) => {\n        if (isP1) {\n            this.p1.score += isPlus ? 1 : -1;\n        } else {\n            this.p2.score += isPlus ? 1 : -1;\n        }\n\n        console.log(this.p1.set, this.finalSetNum, this.p2.set, this.finalSetNum, this.p1.score, this.p2.score, this.finalSetChangeCoatHasDone)\n        if (this.p1.set === this.finalSetNum && this.p2.set === this.finalSetNum && (this.p1.score === 5 || this.p2.score === 5) && !this.finalSetChangeCoatHasDone) {\n            alert(\"コートチェンジをしてください\")\n            this.finalSetChangeCoatHasDone = true;\n            this.finalSetReversed = true;\n        }\n\n        this.changeServReversed();\n        this.pushHistory();\n        this.updateInterface();\n    }\n    updateInterface = () => {\n        this.updateContentInterface(this.p1, this.p2, this.leftServes(), this.isPosReversed());\n        this.updateBarInterface(this.logIncludes(this.logIndex + 1), this.logIncludes(this.logIndex - 1));\n    }\n\n    proceedNextSet = () => {\n        let isP1Winner = this.p1.score > this.p2.score;\n        this.p1.score = 0;\n        this.p2.score = 0;\n        if (isP1Winner) {\n            this.p1.set += 1;\n        } else {\n            this.p2.set += 1;\n        }\n\n        if (this.p1.set > this.finalSetNum || this.p2.set > this.finalSetNum) {\n            let res = this.result();\n            this.onEndGame(res);\n            console.log(res)\n        } else {\n            this.posReversed = (this.p1.set + this.p2.set) % 2 === 1\n            this.changeServReversed();\n            this.pushHistory();\n            this.updateInterface();\n        }\n    }\n\n    changeServReversed = () => {\n        if (this.isDeuce()) {\n            this.servReversed = xor((this.p1.score + this.p2.score) % 2 === 0, !this.primServReversed);\n        } else {\n            this.servReversed = xor(Math.floor((this.p1.score + this.p2.score) / 2) % 2 === 0, !this.primServReversed);\n        }\n    }\n\n    undo = () => {\n        if (this.logIncludes(this.logIndex - 1)) {\n            this.logIndex--;\n            this.restoreFromLog(this.logIndex);\n        }\n    }\n\n    redo = () => {\n        if (this.logIncludes(this.logIndex + 1)) {\n            this.logIndex++;\n            this.restoreFromLog(this.logIndex);\n        }\n    }\n\n    pushHistory = () => {\n        let newEle = new Score(this.p1, this.p2, this.servReversed, this.posReversed);\n        if (this.log.length === this.logIndex + 1) {\n            this.log.push(newEle);\n        } else if (this.log.length > this.logIndex + 1) {\n            // override cache\n            this.log = this.log.slice(0, this.logIndex + 1);\n            this.log.push(newEle);\n        } else {\n            console.log('unknown issue occured')\n        }\n        this.logIndex++;\n    }\n\n    restoreFromLog = (i) => {\n        let log = this.log[i];\n        this.p1.score = log.p1;\n        this.p2.score = log.p2;\n        this.p1.set = log.p1set;\n        this.p2.set = log.p2set;\n        this.servReversed = log.servReversed;\n        this.posReversed = log.posReversed;\n\n        this.updateInterface();\n    }\n\n    reset = () => {\n        this.p1 = new Player();\n        this.p2 = new Player();\n\n        this.servReversed = false;\n        this.posReversed = false;\n        this.finalSetChangeCoatHasDone = false\n\n        this.log = [new Score(this.p1, this.p2, this.servReversed, this.posReversed)];\n        this.logIndex = 0;\n\n        this.updateInterface();\n    }\n\n    result = () => {\n        var setResults = []\n\n        if (this.log.length < 1) {\n            return [{\n                p1score: 0,\n                p2score: 0,\n                p1set: 0,\n                p2set: 0\n            }]\n        }\n\n        for (var i = 1; i < this.log.length; i++) {\n            let log = this.log[i]\n            if (this.isSetFinished(log.p1, log.p2)) {\n                let setResult = {\n                    p1score: log.p1,\n                    p2score: log.p2,\n                    p1set: log.p1set,\n                    p2set: log.p2set\n                }\n                if (log.p1 > log.p2) {\n                    setResult.p1set += 1\n                } else {\n                    setResult.p2set += 1\n                }\n                setResults.push(setResult)\n            }\n        }\n\n        let log = this.log[this.log.length - 1]\n\n        if (!this.isSetFinished(log.p1, log.p2)) {\n            let setResult = {\n                p1score: log.p1,\n                p2score: log.p2,\n                p1set: log.p1set,\n                p2set: log.p2set\n            }\n            setResults.push(setResult)\n        }\n\n        return setResults;\n    }\n\n    isDeuce = () => {\n        return this.p1.score > 9 && this.p2.score > 9;\n    }\n\n    isSetFinished = (p1 = this.p1.score, p2 = this.p2.score) => {\n        return Math.abs(p1 - p2) > 1 && (p1 > 10 || p2 > 10);\n    }\n    isPosReversed = () => {\n        return xor(xor(this.posReversed, this.primServReversed), this.finalSetReversed);\n    }\n    leftServes = () => {\n        return !xor(this.posReversed, this.servReversed)\n    }\n    logIncludes = (i) => {\n        return i > -1 && i < this.log.length;\n    }\n}","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, IconButton, Grid, MenuItem, Menu, Button, FormControlLabel, Checkbox, FormHelperText, FormControl, Select } from '@material-ui/core'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport { ArrowBackIos, ArrowForwardIos, SwapHorizOutlined } from '@material-ui/icons';\nimport Counter from './Counter'\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport ScoreManager from './ScoreManager'\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { Helmet } from 'react-helmet'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst theme = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      light: '#000000',\n      main: '#364150',\n      contrastText: '#fff',\n    },\n    // button enabled\n    secondary: {\n      light: '#000000',\n      main: '#C2BDCE',\n      contrastText: '#fff',\n    },\n    // button disabled\n    error: {\n      light: '#000000',\n      main: '#2b2133',\n      contrastText: '#fff',\n    },\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n    this.state = {\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight,\n      redoEnabled: false,\n      undoEnabled: false,\n      posReversed: false,\n      swipeReversed: false,\n      anchorEl: null,\n      setAnchorEl: null,\n      setNum: 5\n    }\n    this.manager = new ScoreManager();\n    this.manager.updateBarInterface = (redo, undo) => {\n      this.setState({\n        redoEnabled: redo,\n        undoEnabled: undo,\n      })\n    }\n    this.manager.onEndGame = (res) => {\n      this.props.history.push({\n        pathname: '/CounterPlus/result',\n        state: { result: res }\n      })\n    }\n\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.addEventListener(\"resize\", null);\n  }\n  handleResize(WindowSize, event) {\n\n    setTimeout(function () {\n      window.scrollTo(0, 0);\n      this.setState({ windowWidth: window.innerWidth })\n    }.bind(this), 500)\n  }\n\n  handleClick = (event) => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  render() {\n\n    let appBar = (left, right) => {\n      if (this.state.windowWidth > 450) {\n        return (\n          <AppBar position=\"fixed\" color=\"primary\" style={{ boxShadow: 'none' }}>\n            <Toolbar>\n              <Grid\n                justify=\"space-between\" // Add it here :)\n                container\n              >\n                {left(\"20vw\", \"0%\")}\n\n                {right}\n\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        )\n      } else if (this.state.windowWidth > 370) {\n        return (\n          <AppBar position=\"fixed\" color=\"primary\" style={{ boxShadow: 'none' }}>\n            <Toolbar>\n              <Grid\n                justify=\"space-between\" // Add it here :)\n                container\n              >\n                {left(\"12vw\", \"0%\")}\n\n                {right}\n\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        )\n      } else {\n        return (\n          <AppBar position=\"fixed\" color=\"primary\" style={{ boxShadow: 'none' }}>\n            <Toolbar>\n              <Grid\n                justify=\"space-between\" // Add it here :)\n                container\n              >\n                {left(\"8vw\", \"0%\")}\n\n                {right}\n\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        )\n      }\n    }\n\n    let title = (iconSize, transform) => {\n      return (\n        <Grid item>\n          <Typography variant=\"h6\" className={this.classes.title}>\n            <img src=\"https://i.imgur.com/WLv1TO2.png\" alt=\"CounterPlus\" height={iconSize}\n              style={{\n                position: 'absolute', top: '50%', left: { transform },\n                transform: 'translate(0%, -50%)'\n              }} />\n          </Typography>\n        </Grid>\n      )\n    }\n\n    let menu = (\n      <Grid item>\n        <div>\n\n          <ToggleButton\n            value=\"posReversed\"\n            selected={this.state.posReversed}\n            onChange={() => {\n              this.setState({ posReversed: !this.state.posReversed })\n            }}\n            style={{\n              border: 0, bordeRadius: '50'\n            }}\n          >\n            <SwapHorizOutlined color={this.state.posReversed ? \"secondary\" : \"error\"} />\n          </ToggleButton>\n\n          <IconButton aria-label=\"undo\" disabled={!this.state.undoEnabled} className={this.classes.margin}\n            onClick={() => {\n              this.manager.undo();\n            }}>\n            <ArrowBackIos color={this.state.undoEnabled ? \"secondary\" : \"error\"} />\n          </IconButton>\n          <IconButton aria-label=\"redo\" disabled={!this.state.redoEnabled} className={this.classes.margin}\n            onClick={() => {\n              this.manager.redo();\n            }}>\n            <ArrowForwardIos color={this.state.redoEnabled ? \"secondary\" : \"error\"} />\n          </IconButton>\n\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleClick}>\n            <MenuIcon color=\"secondary\" />\n          </Button>\n\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem onClick={() => {\n              let conf = window.confirm('現在のスコアをリセットしても良いですか？');\n              if (conf) {\n                this.manager.reset()\n              }\n              this.handleClose();\n            }}>リセット</MenuItem>\n\n            <MenuItem onClick={() => {\n              let res = this.manager.result();\n              this.props.history.push({\n                pathname: '/CounterPlus/result',\n                state: { result: res }\n              })\n            }}><div style={{ textAlign: 'center' }}>対戦結果を見る</div></MenuItem>\n\n            <MenuItem >\n              <FormControlLabel\n                value=\"swipeReversed\"\n                control={<\n                  Checkbox color=\"primary\"\n                  onChange={e => {\n                    this.setState({ swipeReversed: !this.state.swipeReversed });\n                    this.handleClose();\n                  }}\n                  checked={this.state.swipeReversed}\n                />}\n                label=\"スワイプの向きを逆にする\"\n                labelPlacement=\"start\"\n                style={{ marginLeft: 0 }}\n              />\n            </MenuItem>\n\n            {/* <FormControl>\n              <Select\n                value={10}\n                onChange={() => { }}\n                inputProps={{\n                  name: 'age',\n                  id: 'age-simple',\n                }}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl> */}\n\n            <MenuItem >\n              <FormControl>\n                <Select\n                  value={this.state.setNum}\n                  onChange={(e) => {\n                    let finalSetNum = this.manager.calcFinalSetNum(e.target.value)\n                    if (this.manager.p1.set > finalSetNum || this.manager.p2.set > finalSetNum) {\n                      alert(\"現在のセット数は\\nすでに指定された数のファイナルセットを上回っています\")\n                    } else {\n                      this.setState({ setNum: e.target.value })\n                      this.manager.changeGameset(e.target.value)\n                    }\n                  }}\n                  name=\"name\"\n                  inputProps={{\n                    name: 'gameset',\n                    id: 'gameset-id',\n                  }}\n                >\n                  <MenuItem value={3}>3ゲーム</MenuItem>\n                  <MenuItem value={5}>5ゲーム</MenuItem>\n                  <MenuItem value={7}>7ゲーム</MenuItem>\n                </Select>\n              </FormControl>\n\n            </MenuItem>\n\n\n          </Menu>\n\n        </div>\n      </Grid >\n    )\n    return (\n      <div className={this.classes.root} >\n        <Helmet>\n          <meta name=\"apple-mobile-web-app-title\" content=\"CounterPlus\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n          <title>CounterPlus</title>\n        </Helmet>\n\n        <RemoveScroll>\n          <MuiThemeProvider theme={theme} >\n            {appBar(title, menu)}\n          </MuiThemeProvider>\n          <div>\n            <Counter\n              manager={this.manager}\n              initialPosReversed={this.state.posReversed}\n              swipeReversed={this.state.swipeReversed}\n            />\n          </div>\n        </RemoveScroll>\n      </div >\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(App));","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography, IconButton, Grid, Card, CardContent } from '@material-ui/core'\nimport { ArrowBackIos } from '@material-ui/icons';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { FacebookShareButton, TwitterShareButton, FacebookIcon, TwitterIcon } from 'react-share';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nconst theme = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      light: '#000000',\n      main: '#364150',\n      contrastText: '#fff',\n    },\n    // button enabled\n    secondary: {\n      light: '#000000',\n      main: '#C2BDCE',\n      contrastText: '#fff',\n    },\n    // button disabled\n    error: {\n      light: '#000000',\n      main: '#2b2133',\n      contrastText: '#fff',\n    },\n  },\n});\n\nclass ResultView extends Component {\n\n  constructor(props) {\n    super(props);\n    if (!this.props.location || !this.props.location.state) {\n      this.props.history.push({ pathname: '/CounterPlus/' })\n    }\n    this.classes = props.classes;\n    this.state = {\n      windowWidth: window.innerWidth\n    }\n    this.handleResize = this.handleResize.bind(this);\n    console.log(this.props.location.state)\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentWillUnmount() {\n    window.addEventListener(\"resize\", null);\n  }\n  handleResize(WindowSize, event) {\n    this.setState({ windowWidth: window.innerWidth })\n  }\n\n  render() {\n    let header = (\n      <div>\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"></meta>\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"></meta>\n        <MuiThemeProvider theme={theme} >\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n              <Grid\n                justify=\"space-between\" // Add it here :)\n                container\n              >\n                <Grid item>\n                  <IconButton aria-label=\"undo\" className={this.classes.margin}\n                    onClick={() => {\n                      this.props.history.push({ pathname: '/CounterPlus/' })\n                    }}>\n                    <ArrowBackIos color=\"secondary\" />\n                  </IconButton>\n                </Grid>\n\n                <Grid item>\n                  <img src=\"https://i.imgur.com/WLv1TO2.png\" alt=\"CounterPlus\" height=\"20vw\"\n                    style={{\n                      position: 'absolute', top: '50%',\n                      transform: 'translate(-100%, -50%)'\n                    }} />\n                </Grid>\n\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        </MuiThemeProvider>\n        <div style={{ backgroundColor: '#364150' }}></div>\n      </div>\n    )\n\n    return (\n      <div className={this.classes.root} >\n        {header}\n        <ResultCard data={this.props.location.state.result} classes={this.classes} />\n      </div >\n    );\n  }\n}\n\nclass ResultCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.data = this.props.data\n  }\n\n  subResStr = () => {\n    let arr = this.data.map((res) =>\n      res.p1score + \" - \" + res.p2score,\n    )\n    var res = \"(\"\n    for (var ele of arr) {\n      res += ele + \", \"\n    }\n    res = res.slice(0, res.length - 2);\n    res += \")\"\n    return res\n  }\n\n  render() {\n    let finalRes = this.data[this.data.length - 1];\n    let indices = [...Array(this.data.length).keys()]\n    let subRes = indices.map((i) =>\n      <Typography variant=\"h4\" component=\"p\" id={i}>\n        {this.data[i].p1score} - {this.data[i].p2score}\n      </Typography>\n    )\n\n    return (\n      <div>\n        <Card className={this.props.classes.card} style={{\n          margin: 50\n        }}>\n          <CardContent>\n            <div style={{ textAlign: 'center' }}>\n              <Typography className={this.props.classes.title} color=\"textSecondary\" gutterBottom>\n                対戦結果\n            </Typography>\n\n              <Typography variant=\"h1\" component=\"h1\">\n                {finalRes.p1set} - {finalRes.p2set}\n              </Typography>\n              <Typography className={this.props.classes.pos} variant=\"h5\" color=\"textSecondary\" style={{ padding: 15 }}>\n                各セット スコア\n            </Typography>\n              {subRes}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Grid\n          justify=\"flex-end\" // Add it here :)\n          container\n        >\n          <FacebookShareButton url={\"https://caprolactam2450.github.io/CounterPlus/\"}>\n            <FacebookIcon round />\n          </FacebookShareButton>\n          <TwitterShareButton url={\"https://caprolactam2450.github.io/CounterPlus/\"}\n            title={\"試合の結果\\n\" + finalRes.p1set + \" - \" + finalRes.p2set + this.subResStr() + \"\\n\"}\n            via={\"CounterPlus\"}\n            style={{ paddingLeft: 10, paddingRight: 20 }}>\n            <TwitterIcon round />\n          </TwitterShareButton>\n\n        </Grid>\n\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(ResultView));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Result from './Result';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter,\n    Route\n} from 'react-router-dom'\n\nconst Router = () => (\n    <BrowserRouter >\n        <div>\n            <Route exact path='/' component={App} />\n            <Route exact path='/CounterPlus/' component={App} />\n            <Route path='/CounterPlus/result' component={Result} />\n        </div>\n    </BrowserRouter>\n)\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}